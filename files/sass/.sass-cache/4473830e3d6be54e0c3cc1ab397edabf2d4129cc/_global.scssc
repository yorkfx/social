3.2.10 (Media Mark)
3a0b05c8d48c07eae82eceb6571578ab9de3cd5e
o:Sass::Tree::RootNode
:@template"´(//
// Global Foundation Mixins
//

$experimental: true !default;

// We use this to control border radius.
@mixin radius($radius:$global-radius) {
  @if $radius {
    @if $experimental {
      -webkit-border-radius: $radius;
    }
    border-radius: $radius;
  }
}

// We use this to create equal side border radius on elements.
@mixin side-radius($side, $radius:$global-radius) {
  @if $side == left {
    @if $experimental {
      -moz-border-radius-bottomleft: $radius;
      -moz-border-radius-topleft: $radius;
      -webkit-border-bottom-left-radius: $radius;
      -webkit-border-top-left-radius: $radius;
    }
    border-bottom-left-radius: $radius;
    border-top-left-radius: $radius;
  }
  @else if $side == right {
    @if $experimental {
      -moz-border-radius-topright: $radius;
      -moz-border-radius-bottomright: $radius;
      -webkit-border-top-right-radius: $radius;
      -webkit-border-bottom-right-radius: $radius;
    }
    border-top-right-radius: $radius;
    border-bottom-right-radius: $radius;
  }
  @else if $side == top {
    @if $experimental {
      -moz-border-radius-topright: $radius;
      -moz-border-radius-topleft: $radius;
      -webkit-border-top-right-radius: $radius;
      -webkit-border-top-left-radius: $radius;
    }
    border-top-right-radius: $radius;
    border-top-left-radius: $radius;
  }
  @else if $side == bottom {
    @if $experimental {
      -moz-border-radius-bottomright: $radius;
      -moz-border-radius-bottomleft: $radius;
      -webkit-border-bottom-right-radius: $radius;
      -webkit-border-bottom-left-radius: $radius;
    }
    border-bottom-right-radius: $radius;
    border-bottom-left-radius: $radius;
  }
}

// We can control whether or not we have inset shadows edges.
@mixin inset-shadow($active:true) {
  @if $experimental {
    -webkit-box-shadow: $shiny-edge-size $shiny-edge-color inset;
  }
  box-shadow: $shiny-edge-size $shiny-edge-color inset;

  @if $active { &:active {
    @if $experimental {
      -webkit-box-shadow: $shiny-edge-size $shiny-edge-active-color inset;
    }
    box-shadow: $shiny-edge-size $shiny-edge-active-color inset; } }
}

// We use this to add transitions to elements
@mixin single-transition($property:all, $speed:300ms, $ease:ease-out) {
  @if $experimental {
    -webkit-transition: $property $speed $ease;
    -moz-transition: $property $speed $ease;
  }
  transition: $property $speed $ease;
}

// We use this to add box-sizing across browser prefixes
@mixin box-sizing($type:border-box) {
  @if $experimental {
    -moz-box-sizing: $type;
    -webkit-box-sizing: $type;
  }
  box-sizing: $type;
}

// We use this to create equilateral triangles
@mixin css-triangle($triangle-size, $triangle-color, $triangle-direction) {
  content: "";
  display: block;
  width: 0;
  height: 0;
  border: inset $triangle-size;
  @if ($triangle-direction == top) {
    border-color: $triangle-color transparent transparent transparent;
    border-top-style: solid;
  }
  @if ($triangle-direction == bottom) {
    border-color: transparent transparent $triangle-color transparent;
    border-bottom-style: solid;
  }
  @if ($triangle-direction == left) {
    border-color: transparent transparent transparent $triangle-color;
    border-left-style: solid;
  }
  @if ($triangle-direction == right) {
    border-color: transparent $triangle-color transparent transparent;
    border-right-style: solid;
  }
}

// We use this to do clear floats
@mixin clearfix() {
  *zoom:1;
  &:before, &:after { content: " "; display: table; }
  &:after { clear: both; }
}


// We use this to add a glowing effect to block elements
@mixin block-glowing-effect($selector:focus, $fade-time:300ms, $glowing-effect-color:fade-out($primary-color, .25)) {
  @if $experimental {
    -webkit-transition: -webkit-box-shadow $fade-time, border-color $fade-time ease-in-out;
    -moz-transition: -moz-box-shadow $fade-time, border-color $fade-time ease-in-out;
  }
  transition: box-shadow $fade-time, border-color $fade-time ease-in-out;

  &:#{$selector} {
    @if $experimental {
      -webkit-box-shadow: 0 0 5px $glowing-effect-color;
      -moz-box-shadow: 0 0 5px $glowing-effect-color;
    }
    box-shadow: 0 0 5px $glowing-effect-color;
    border-color: $glowing-effect-color;
  }
}

//
// Foundation Variables
//

// The default font-size is set to 100% of the browser style sheet (usually 16px)
// for compatibility with brower-based text zoom or user-set defaults.

// Since the typical default browser font-size is 16px, that makes the calculation for grid size.
// If you want your base font-size to be different and not have it effect the grid breakpoints,
// set $em-base to $base-font-size and make sure $base-font-size is a px value.
$base-font-size: 100% !default;

// $base-line-height is 24px while $base-font-size is 16px
$base-line-height: 150% !default;

// This is the default html and body font-size for the base em value.
$em-base: 16 !default;

// It strips the unit of measure and returns it
@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}

// Converts "px" to "em" using the ($)em-base
@function convert-to-em($value)  {
  $value: strip-unit($value) / strip-unit($em-base) * 1em;
  @if ($value == 0em) { $value: 0; } // Turn 0em into 0
  @return $value;
}

// Working in ems is annoying. Think in pixels by using this handy function, emCalc(#)
// Just enter the number, no need to mention "px"
@function emCalc($values...) {
  $max: length($values); // Get the total number of parameters passed

  // If there is only 1 parameter, then return it as an integer.
  // This is done because a list can't be multiplied or divided even if it contains a single value
  @if $max == 1 { @return convert-to-em(nth($values, 1)); }

  $emValues: (); // This will eventually store the converted $values in a list
  @for $i from 1 through $max {
    $emValues: append($emValues, convert-to-em(nth($values, $i)));
  }
  @return $emValues;
}

// Maybe you want to create rems and pixels
// @function remCalc($pxWidth) {
//   @return $pxWidth / $em-base * 1rem;
// }

// We use these to control various global styles
$body-bg: #fff !default;
$body-font-color: #222 !default;
$body-font-family: "Helvetica Neue", "Helvetica", Helvetica, Arial, sans-serif !default;
$body-font-weight: normal !default;
$body-font-style: normal !default;

// We use this to control font-smoothing
$font-smoothing: subpixel-antialiased !default;

// We use these to control text direction settings
$text-direction: ltr !default;

// NOTE: No need to change this conditional statement, $text-direction variable controls it all.
$default-float: left !default;
$opposite-direction: right !default;
@if $text-direction == ltr {
  $default-float: left;
  $opposite-direction: right;
} @else {
  $default-float: right;
  $opposite-direction: left;
}

// We use these as default colors throughout
$primary-color: #2ba6cb !default;
$secondary-color: #e9e9e9 !default;
$alert-color: #c60f13 !default;
$success-color: #5da423 !default;

// We use these to make sure border radius matches unless we want it different.
$global-radius: 3px !default;
$global-rounded: 1000px !default;

// We use these to control inset shadow shiny edges and depressions.
$shiny-edge-size: 0 1px 0 !default;
$shiny-edge-color: rgba(#fff, .5) !default;
$shiny-edge-active-color: rgba(#000, .2) !default;

// We use this to control whether or not CSS classes come through in the gem files.
$include-html-classes: true !default;
$include-print-styles: true !default;
$include-html-global-classes: $include-html-classes !default;

// Media Queries
$small-screen: 768px !default;
$medium-screen: 1280px !default;
$large-screen: 1440px !default;

$screen: "only screen" !default;
$small: "only screen and (min-width: #{$small-screen})" !default;
$medium: "only screen and (min-width:#{$medium-screen})" !default;
$large: "only screen and (min-width:#{$large-screen})" !default;
$landscape: "only screen and (orientation: landscape)" !default;
$portrait: "only screen and (orientation: portrait)" !default;

//We use this as cursors values for enabling the option of having custom cursors in the whole site's stylesheet
$cursor-crosshair-value: crosshair !default;
$cursor-default-value: default !default;
$cursor-pointer-value: pointer !default;
$cursor-help-value: help !default;
$cursor-text-value: text !default;


@if $include-html-global-classes {

  // Set box-sizing globally to handle padding and border widths
  *,
  *:before,
  *:after {
    @include box-sizing(border-box);
  }

  html,
  body { font-size: $base-font-size; }

  // Default body styles
  body {
    background: $body-bg;
    color: $body-font-color;
    padding: 0;
    margin: 0;
    font-family: $body-font-family;
    font-weight: $body-font-weight;
    font-style: $body-font-style;
    line-height: 1; // Set to $base-line-height to take on browser default of 150%
    position: relative;
    cursor: $cursor-default-value;
  }

a:hover { cursor: $cursor-pointer-value; }

  // Override outline from normalize, we don't like it
  a:focus { outline: none; }

  // Grid Defaults to get images and embeds to work properly
  img,
  object,
  embed { max-width: 100%; height: auto; }

  object,
  embed { height: 100%; }
  img { -ms-interpolation-mode: bicubic; }

  #map_canvas,
  .map_canvas {
    img,
    embed,
    object { max-width: none !important;
    }
  }

  // Miscellaneous useful HTML classes
  .left         { float: left !important; }
  .right        { float: right !important; }
  .text-left    { text-align: left !important; }
  .text-right   { text-align: right !important; }
  .text-center  { text-align: center !important; }
  .text-justify { text-align: justify !important; }
  .hide         { display: none; }

  // Font smoothing
  // Antialiased font smoothing works best for light text on a dark background.
  // Apply to single elements instead of globally to body.
  // Note this only applies to webkit-based desktop browsers on the Mac.
  .antialiased { -webkit-font-smoothing: antialiased; }

  // Get rid of gap under images by making them display: inline-block; by default
  img {
    display: inline-block;
    vertical-align: middle;
  }

  //
  // Global resets for forms
  //

  // Make sure textarea takes on height automatically
  textarea { height: auto; min-height: 50px; }

  // Make select elements 100% width by default
  select { width: 100%; }

}
:@options{ :@has_childrenT:@children[Uo:Sass::Tree::CommentNode
;@:@value[")/*
 * Global Foundation Mixins
 * */:
@type:silent;	[ :
@lineio:Sass::Tree::VariableNode:@guarded"!default;@:
@name"experimental:
@expro:Sass::Script::Bool;@;T;i
;	[ ;i
o;

;@;["0/* We use this to control border radius. */;;;	[ ;io:Sass::Tree::MixinDefNode;@;"radius:@splat0;T;	[u:Sass::Tree::IfNodeó[o:Sass::Script::Variable	:@options{ :
@name"radius:@underscored_name"radius:
@linei0[u:Sass::Tree::IfNodeø[o:Sass::Script::Variable	:@options{ :
@name"experimental:@underscored_name"experimental:
@linei0[o:Sass::Tree::PropNode:
@tabsi ;@;["-webkit-border-radius:@prop_syntax:new:@valueo; 	;@;"radius;"radius;	i:@children[ ;	io:Sass::Tree::PropNode:
@tabsi ;@;["border-radius:@prop_syntax:new:@valueo; 	;@;"radius;"radius;	i:@children[ ;	i:
@args[[o:Sass::Script::Variable;@;"radius:@underscored_name"radiuso;	;@;"global-radius;"global_radius;i;io;

;@;["F/* We use this to create equal side border radius on elements. */;;;	[ ;io;;@;"side-radius;0;T;	[u;õ[o:Sass::Script::Operation
:@operator:eq:@options{ :@operand2o:Sass::Script::String	;@:@value"	left:
@type:identifier:
@linei:@operand1o:Sass::Script::Variable	;@:
@name"	side:@underscored_name"	side;i;iu:Sass::Tree::IfNodeú[o:Sass::Script::Operation
:@operator:eq:@options{ :@operand2o:Sass::Script::String	;@:@value"
right:
@type:identifier:
@linei":@operand1o:Sass::Script::Variable	;@:
@name"	side:@underscored_name"	side;i";i"u:Sass::Tree::IfNodeø[o:Sass::Script::Operation
:@operator:eq:@options{ :@operand2o:Sass::Script::String	;@:@value"top:
@type:identifier:
@linei,:@operand1o:Sass::Script::Variable	;@:
@name"	side:@underscored_name"	side;i,;i,u:Sass::Tree::IfNode[o:Sass::Script::Operation
:@operator:eq:@options{ :@operand2o:Sass::Script::String	;@:@value"bottom:
@type:identifier:
@linei6:@operand1o:Sass::Script::Variable	;@:
@name"	side:@underscored_name"	side;i6;i60[u:Sass::Tree::IfNode![o:Sass::Script::Variable	:@options{ :
@name"experimental:@underscored_name"experimental:
@linei70[	o:Sass::Tree::PropNode:
@tabsi ;@;["#-moz-border-radius-bottomright:@prop_syntax:new:@valueo; 	;@;"radius;"radius;	i8:@children[ ;	i8o;
;i ;@;[""-moz-border-radius-bottomleft;;;o; 	;@;"radius;"radius;	i9;[ ;	i9o;
;i ;@;["'-webkit-border-bottom-right-radius;;;o; 	;@;"radius;"radius;	i:;[ ;	i:o;
;i ;@;["&-webkit-border-bottom-left-radius;;;o; 	;@;"radius;"radius;	i;;[ ;	i;o:Sass::Tree::PropNode:
@tabsi ;@;["border-bottom-right-radius:@prop_syntax:new;o;	;@;"radius;"radius;i=:@children[ ;i=o;;i ;@;["border-bottom-left-radius;;;o;	;@;"radius;"radius;i>;[ ;i>[u;[o:Sass::Script::Variable	:@options{ :
@name"experimental:@underscored_name"experimental:
@linei-0[	o:Sass::Tree::PropNode:
@tabsi ;@;[" -moz-border-radius-topright:@prop_syntax:new:@valueo; 	;@;"radius;"radius;	i.:@children[ ;	i.o;
;i ;@;["-moz-border-radius-topleft;;;o; 	;@;"radius;"radius;	i/;[ ;	i/o;
;i ;@;["$-webkit-border-top-right-radius;;;o; 	;@;"radius;"radius;	i0;[ ;	i0o;
;i ;@;["#-webkit-border-top-left-radius;;;o; 	;@;"radius;"radius;	i1;[ ;	i1o:Sass::Tree::PropNode:
@tabsi ;@;["border-top-right-radius:@prop_syntax:new;o;	;@;"radius;"radius;i3:@children[ ;i3o;;i ;@;["border-top-left-radius;;;o;	;@;"radius;"radius;i4;[ ;i4[u;[o:Sass::Script::Variable	:@options{ :
@name"experimental:@underscored_name"experimental:
@linei#0[	o:Sass::Tree::PropNode:
@tabsi ;@;[" -moz-border-radius-topright:@prop_syntax:new:@valueo; 	;@;"radius;"radius;	i$:@children[ ;	i$o;
;i ;@;["#-moz-border-radius-bottomright;;;o; 	;@;"radius;"radius;	i%;[ ;	i%o;
;i ;@;["$-webkit-border-top-right-radius;;;o; 	;@;"radius;"radius;	i&;[ ;	i&o;
;i ;@;["'-webkit-border-bottom-right-radius;;;o; 	;@;"radius;"radius;	i';[ ;	i'o:Sass::Tree::PropNode:
@tabsi ;@;["border-top-right-radius:@prop_syntax:new;o;	;@;"radius;"radius;i):@children[ ;i)o;;i ;@;["border-bottom-right-radius;;;o;	;@;"radius;"radius;i*;[ ;i*[u;[o:Sass::Script::Variable	:@options{ :
@name"experimental:@underscored_name"experimental:
@linei0[	o:Sass::Tree::PropNode:
@tabsi ;@;[""-moz-border-radius-bottomleft:@prop_syntax:new:@valueo; 	;@;"radius;"radius;	i:@children[ ;	io;
;i ;@;["-moz-border-radius-topleft;;;o; 	;@;"radius;"radius;	i;[ ;	io;
;i ;@;["&-webkit-border-bottom-left-radius;;;o; 	;@;"radius;"radius;	i;[ ;	io;
;i ;@;["#-webkit-border-top-left-radius;;;o; 	;@;"radius;"radius;	i;[ ;	io:Sass::Tree::PropNode:
@tabsi ;@;["border-bottom-left-radius:@prop_syntax:new;o;	;@;"radius;"radius;i:@children[ ;io;;i ;@;["border-top-left-radius;;;o;	;@;"radius;"radius;i ;[ ;i ;[[o;;@;"	side;"	side0[o;;@;"radius;"radiuso;	;@;"global-radius;"global_radius;i;io;

;@;["E/* We can control whether or not we have inset shadows edges. */;;;	[ ;iBo;;@;"inset-shadow;0;T;	[u;¬[o:Sass::Script::Variable	:@options{ :
@name"experimental:@underscored_name"experimental:
@lineiD0[o:Sass::Tree::PropNode:
@tabsi ;@;["-webkit-box-shadow:@prop_syntax:new:@valueo:Sass::Script::List	;@;[o; 	;@;"shiny-edge-size;"shiny_edge_size;	iEo; 	;@;"shiny-edge-color;"shiny_edge_color;	iEo:Sass::Script::String	;@;"
inset:
@type:identifier;	iE:@separator:
space;	iE:@children[ ;	iEo:Sass::Tree::PropNode:
@tabsi ;@;["box-shadow:@prop_syntax:new;o:Sass::Script::List	;@;[o;	;@;"shiny-edge-size;"shiny_edge_size;iGo;	;@;"shiny-edge-color;"shiny_edge_color;iGo:Sass::Script::String	;@;"
inset;:identifier;iG:@separator:
space;iG;	[ ;iGu;ã[o:Sass::Script::Variable	:@options{ :
@name"active:@underscored_name"active:
@lineiI0[o:Sass::Tree::RuleNode:
@tabsi ;@:
@rule["&:active:@parsed_ruleso:"Sass::Selector::CommaSequence:@members[o:Sass::Selector::Sequence;[o:#Sass::Selector::SimpleSequence
;[o:Sass::Selector::Parent:@filename" ;	iIo:Sass::Selector::Pseudo
;["active;@:
@type:
class;	iI:	@arg0:@subject0;@:@sourceso:Set:
@hash{ ;	iI;@;	iI:@has_childrenT:@children[u:Sass::Tree::IfNodeº[o:Sass::Script::Variable	:@options{ :
@name"experimental:@underscored_name"experimental:
@lineiJ0[o:Sass::Tree::PropNode:
@tabsi ;@;["-webkit-box-shadow:@prop_syntax:new:@valueo:Sass::Script::List	;@;[o; 	;@;"shiny-edge-size;"shiny_edge_size;	iKo; 	;@;"shiny-edge-active-color;"shiny_edge_active_color;	iKo:Sass::Script::String	;@;"
inset:
@type:identifier;	iK:@separator:
space;	iK:@children[ ;	iKo:Sass::Tree::PropNode;i ;@;["box-shadow:@prop_syntax:new:@valueo:Sass::Script::List	;@;"[o; 	;@;"shiny-edge-size;"shiny_edge_size;	iMo; 	;@;"shiny-edge-active-color;"shiny_edge_active_color;	iMo:Sass::Script::String	;@;""
inset;:identifier;	iM:@separator:
space;	iM;[ ;	iM;	iI;[[o;;@;"active;"activeo;;@;T;iC;iCo;

;@;["5/* We use this to add transitions to elements */;;;	[ ;iPo;;@;"single-transition;0;T;	[u;	[o:Sass::Script::Variable	:@options{ :
@name"experimental:@underscored_name"experimental:
@lineiR0[o:Sass::Tree::PropNode:
@tabsi ;@;["-webkit-transition:@prop_syntax:new:@valueo:Sass::Script::List	;@;[o; 	;@;"property;"property;	iSo; 	;@;"
speed;"
speed;	iSo; 	;@;"	ease;"	ease;	iS:@separator:
space;	iS:@children[ ;	iSo;
;i ;@;["-moz-transition;;;o;	;@;[o; 	;@;"property;"property;	iTo; 	;@;"
speed;"
speed;	iTo; 	;@;"	ease;"	ease;	iT;;;	iT;[ ;	iTo;;i ;@;["transition;;;o;	;@;[o;	;@;"property;"property;iVo;	;@;"
speed;"
speed;iVo;	;@;"	ease;"	ease;iV;!;";iV;	[ ;iV;[[o;;@;"property;"propertyo;	;@;"all;; ;iQ[o;;@;"
speed;"
speedo:Sass::Script::Number:@denominator_units[ ;@:@numerator_units["ms:@original"
300ms;i,;iQ[o;;@;"	ease;"	easeo;	;@;"ease-out;; ;iQ;iQo;

;@;["@/* We use this to add box-sizing across browser prefixes */;;;	[ ;iYo;;@;"box-sizing;0;T;	[u;<[o:Sass::Script::Variable	:@options{ :
@name"experimental:@underscored_name"experimental:
@linei[0[o:Sass::Tree::PropNode:
@tabsi ;@;["-moz-box-sizing:@prop_syntax:new:@valueo; 	;@;"	type;"	type;	i\:@children[ ;	i\o;
;i ;@;["-webkit-box-sizing;;;o; 	;@;"	type;"	type;	i];[ ;	i]o;;i ;@;["box-sizing;;;o;	;@;"	type;"	type;i_;	[ ;i_;[[o;;@;"	type;"	typeo;	;@;"border-box;; ;iZ;iZo;

;@;["6/* We use this to create equilateral triangles */;;;	[ ;ibo;;@;"css-triangle;0;T;	[o;;i ;@;["content;;;o;;@;""";; ;	[ ;ido;;i ;@;["display;;;o;;@;"
block;; ;	[ ;ieo;;i ;@;["
width;;;o;;@;"0;; ;	[ ;ifo;;i ;@;["height;;;o;;@;"0;; ;	[ ;igo;;i ;@;["border;;;o;	;@;[o;	;@;"
inset;; ;iho;	;@;"triangle-size;"triangle_size;ih;!;";ih;	[ ;ihu;d[o:Sass::Script::Operation
:@operator:eq:@options{ :@operand2o:Sass::Script::String	;@:@value"top:
@type:identifier:
@lineii:@operand1o:Sass::Script::Variable	;@:
@name"triangle-direction:@underscored_name"triangle_direction;ii;ii0[o:Sass::Tree::PropNode:
@tabsi ;@;["border-color:@prop_syntax:new;o:Sass::Script::List	;@;[	o;	;@;"triangle-color;"triangle_color;ijo;
	;@;"transparent;;;ijo;
	;@;"transparent;;;ijo;
	;@;"transparent;;;ij:@separator:
space;ij:@children[ ;ijo;;i ;@;["border-top-style;;;o;
;@;"
solid;;;[ ;iku;j[o:Sass::Script::Operation
:@operator:eq:@options{ :@operand2o:Sass::Script::String	;@:@value"bottom:
@type:identifier:
@lineim:@operand1o:Sass::Script::Variable	;@:
@name"triangle-direction:@underscored_name"triangle_direction;im;im0[o:Sass::Tree::PropNode:
@tabsi ;@;["border-color:@prop_syntax:new;o:Sass::Script::List	;@;[	o;
	;@;"transparent;;;ino;
	;@;"transparent;;;ino;	;@;"triangle-color;"triangle_color;ino;
	;@;"transparent;;;in:@separator:
space;in:@children[ ;ino;;i ;@;["border-bottom-style;;;o;
;@;"
solid;;;[ ;iou;f[o:Sass::Script::Operation
:@operator:eq:@options{ :@operand2o:Sass::Script::String	;@:@value"	left:
@type:identifier:
@lineiq:@operand1o:Sass::Script::Variable	;@:
@name"triangle-direction:@underscored_name"triangle_direction;iq;iq0[o:Sass::Tree::PropNode:
@tabsi ;@;["border-color:@prop_syntax:new;o:Sass::Script::List	;@;[	o;
	;@;"transparent;;;iro;
	;@;"transparent;;;iro;
	;@;"transparent;;;iro;	;@;"triangle-color;"triangle_color;ir:@separator:
space;ir:@children[ ;iro;;i ;@;["border-left-style;;;o;
;@;"
solid;;;[ ;isu;h[o:Sass::Script::Operation
:@operator:eq:@options{ :@operand2o:Sass::Script::String	;@:@value"
right:
@type:identifier:
@lineiu:@operand1o:Sass::Script::Variable	;@:
@name"triangle-direction:@underscored_name"triangle_direction;iu;iu0[o:Sass::Tree::PropNode:
@tabsi ;@;["border-color:@prop_syntax:new;o:Sass::Script::List	;@;[	o;
	;@;"transparent;;;ivo;	;@;"triangle-color;"triangle_color;ivo;
	;@;"transparent;;;ivo;
	;@;"transparent;;;iv:@separator:
space;iv:@children[ ;ivo;;i ;@;["border-right-style;;;o;
;@;"
solid;;;[ ;iw;[[o;;@;"triangle-size;"triangle_size0[o;;@;"triangle-color;"triangle_color0[o;;@;"triangle-direction;"triangle_direction0;ico;

;@;[")/* We use this to do clear floats */;;;	[ ;i{o;;@;"clearfix;0;T;	[o;;i ;@;["
*zoom;;;o;;@;"1;; ;	[ ;i}o:Sass::Tree::RuleNode;i ;@:
@rule["&:before, &:after:@parsed_ruleso:"Sass::Selector::CommaSequence:@members[o:Sass::Selector::Sequence;+[o:#Sass::Selector::SimpleSequence
;+[o:Sass::Selector::Parent:@filename" ;i~o:Sass::Selector::Pseudo
;["before;/@ã;:
class;i~:	@arg0:@subject0;/@ã:@sourceso:Set:
@hash{ ;i~o;,;+[o;-
;+[o;.;/@ã;i~o;0
;["
after;/@ã;;1;i~;20;30;/@ã;4o;5;6{ ;i~;/@ã;i~;T;	[o;;i ;@;["content;;;o;;@;"" ";; ;	[ ;i~o;;i ;@;["display;;;o;;@;"
table;; ;	[ ;i~;i~o;';i ;@;(["&:after;)o;*;+[o;,;+[o;-
;+[o;.;/" ;io;0
;["
after;/@
;;1;i;20;30;/@
;4o;5;6{ ;i;/@
;i;T;	[o;;i ;@;["
clear;;;o;;@;"	both;; ;	[ ;i;i;[ ;i|o;

;@;["@/* We use this to add a glowing effect to block elements */;;;	[ ;i~o;;@;"block-glowing-effect;0;T;	[u;7[o:Sass::Script::Variable	:@options{ :
@name"experimental:@underscored_name"experimental:
@linei0[o:Sass::Tree::PropNode:
@tabsi ;@;["-webkit-transition:@prop_syntax:new:@valueo:Sass::Script::List	;@;[o;	;@;[o:Sass::Script::String	;@;"-webkit-box-shadow:
@type:identifier;	io; 	;@;"fade-time;"fade_time;	i:@separator:
space;	io;	;@;[o;	;@;"border-color;;;	io; 	;@;"fade-time;"fade_time;	io;	;@;"ease-in-out;;;	i;;;	i;:
comma;	i:@children[ ;	io;
;i ;@;["-moz-transition;;;o;	;@;[o;	;@;[o;	;@;"-moz-box-shadow;;;	io; 	;@;"fade-time;"fade_time;	i;;;	io;	;@;[o;	;@;"border-color;;;	io; 	;@;"fade-time;"fade_time;	io;	;@;"ease-in-out;;;	i;;;	i;;;	i;[ ;	io;;i ;@;["transition;;;o;	;@;[o;	;@;[o;	;@;"box-shadow;; ;io;	;@;"fade-time;"fade_time;i;!;";io;	;@;[o;	;@;"border-color;; ;io;	;@;"fade-time;"fade_time;io;	;@;"ease-in-out;; ;i;!;";i;!:
comma;i;	[ ;io;';i ;@;(["&:o;	;@;"selector;"selector;i;T;	[u;Ë[o:Sass::Script::Variable	:@options{ :
@name"experimental:@underscored_name"experimental:
@linei0[o:Sass::Tree::PropNode:
@tabsi ;@;["-webkit-box-shadow:@prop_syntax:new:@valueo:Sass::Script::List	;@;[	o:Sass::Script::Number:@denominator_units[ ;@:@numerator_units[ :@original"0;i ;	io;;@;@;[ ;"0;i ;	io;;[ ;@;["px;"5px;i
;	io; 	;@;"glowing-effect-color;"glowing_effect_color;	i:@separator:
space;	i:@children[ ;	io;
;i ;@;["-moz-box-shadow;;;o;	;@;[	o;;@;@;[ ;"0;i ;	io;;@;@;[ ;"0;i ;	io;;[ ;@;["px;"5px;i
;	io; 	;@;"glowing-effect-color;"glowing_effect_color;	i;;;	i;[ ;	io;;i ;@;["box-shadow;;;o;	;@;[	o;#;$[ ;@;%[ ;&"0;i ;io;#;$@D;@;%[ ;&"0;i ;io;#;$[ ;@;%["px;&"5px;i
;io;	;@;"glowing-effect-color;"glowing_effect_color;i;!;";i;	[ ;io;;i ;@;["border-color;;;o;	;@;"glowing-effect-color;"glowing_effect_color;i;	[ ;i;i;[[o;;@;"selector;"selectoro;	;@;"
focus;; ;i[o;;@;"fade-time;"fade_timeo;#;$[ ;@;%["ms;&"
300ms;i,;i[o;;@;"glowing-effect-color;"glowing_effect_coloro:Sass::Script::Funcall:@keywords{ ;@;"fade-out;0;[o;	;@;"primary-color;"primary_color;io;#;$@D;@;%[ ;&"	0.25;f	0.25;i;i;io;

;@;["%/*
 * Foundation Variables
 * */;;;	[ ;io;

;@;["/* The default font-size is set to 100% of the browser style sheet (usually 16px)
 * for compatibility with brower-based text zoom or user-set defaults. */;;;	[ ;io;

;@;["/* Since the typical default browser font-size is 16px, that makes the calculation for grid size.
 * If you want your base font-size to be different and not have it effect the grid breakpoints,
 * set $em-base to $base-font-size and make sure $base-font-size is a px value. */;;;	[ ;io;;"!default;@;"base-font-size;o;#;$[ ;@;%["%;&"	100%;ii;i;	[ ;io;

;@;["B/* $base-line-height is 24px while $base-font-size is 16px */;;;	[ ;io;;"!default;@;"base-line-height;o;#;$[ ;@;%["%;&"	150%;i;i;	[ ;io;

;@;["M/* This is the default html and body font-size for the base em value. */;;;	[ ;io;;"!default;@;"em-base;o;#;$@D;@;%[ ;&"16;i;i ;	[ ;i o;

;@;["7/* It strips the unit of measure and returns it */;;;	[ ;i¢o:Sass::Tree::FunctionNode;@;"strip-unit;0;T;	[o:Sass::Tree::ReturnNode	;@;o:Sass::Script::Operation
:@operator:div;@:@operand2o;<
;=:	plus;@;?o;#;$@D;@;%[ ;&"1;i;i¤:@operand1o;<
;=:
times;@;?o;#;$@D;@;%[ ;&"0;i ;i¤;Ao;	;@;"num;"num;i¤;i¤;i¤;Ao;	;@;"num;"num;i¤;i¤;	[ ;i¤;[[o;;@;"num;"num0;i£o;

;@;["5/* Converts "px" to "em" using the ($)em-base */;;;	[ ;i§o;:;@;"convert-to-em;0;T;	[	o;;0;@;"
value;o;<
;=;B;@;?o;#;$[ ;@;%["em;&"1em;i;i©;Ao;<
;=;>;@;?o;8;9{ ;@;"strip-unit;0;[o;	;@;"em-base;"em_base;i©;i©;Ao;8;9{ ;@;"strip-unit;0;[o;	;@;"
value;"
value;i©;i©;i©;i©;	[ ;i©u;|[o:Sass::Script::Operation
:@operator:eq:@options{ :@operand2o:Sass::Script::Number:@denominator_units[ ;@:@numerator_units["em:@original"0em:@valuei :
@lineiª:@operand1o:Sass::Script::Variable	;@:
@name"
value:@underscored_name"
value;iª;iª0[o:Sass::Tree::VariableNode:@guarded0;@;"
value:
@expro;
;[ ;@;[ ;"0;i ;iª:@children[ ;iªo;

;@;["/* Turn 0em into 0 */;;;	[ ;iªo;;	;@;o;	;@;"
value;"
value;i«;	[ ;i«;[[o;;@;"
value;"
value0;i¨o;

;@;["/* Working in ems is annoying. Think in pixels by using this handy function, emCalc(#)
 * Just enter the number, no need to mention "px" */;;;	[ ;i®o;:;@;"emCalc;o;;{ ;"values;"values;T;	[o;;0;@;"max;o;8;9{ ;@;"length;0;[o;	;@;"values;"values;i±;i±;	[ ;i±o;

;@;["4/* Get the total number of parameters passed */;;;	[ ;i±o;

;@;["¢/* If there is only 1 parameter, then return it as an integer.
 * This is done because a list can't be multiplied or divided even if it contains a single value */;;;	[ ;i³u;î[o:Sass::Script::Operation
:@operator:eq:@options{ :@operand2o:Sass::Script::Number:@denominator_units[ ;@:@numerator_units[ :@original"1:@valuei:
@lineiµ:@operand1o:Sass::Script::Variable	;@:
@name"max:@underscored_name"max;iµ;iµ0[o:Sass::Tree::ReturnNode	;@:
@expro:Sass::Script::Funcall:@keywords{ ;@;"convert-to-em:@splat0:
@args[o;;{ ;@;"nth;0;[o;	;@;"values;"values;iµo;
;@	;@;[ ;"1;i;iµ;iµ;iµ:@children[ ;iµo;;0;@;"emValues;o;	;@;[ ;!;";i·;	[ ;i·o;

;@;["E/* This will eventually store the converted $values in a list */;;;	[ ;i·o:Sass::Tree::ForNode:	@var"i;@:@too;	;@;"max;"max;i¸:@exclusiveF;T;	[o;;0;@;"emValues;o;8;9{ ;@;"append;0;[o;	;@;"emValues;"emValues;i¹o;8;9{ ;@;"convert-to-em;0;[o;8;9{ ;@;"nth;0;[o;	;@;"values;"values;i¹o;	;@;"i;"i;i¹;i¹;i¹;i¹;	[ ;i¹;i¸:
@fromo;#;$@D;@;%[ ;&"1;i;i¸o;;	;@;o;	;@;"emValues;"emValues;i»;	[ ;i»;[ ;i°o;

;@;["}/* Maybe you want to create rems and pixels
 * @function remCalc($pxWidth) {
 *   @return $pxWidth / $em-base * 1rem;
 * } */;;;	[ ;i¾o;

;@;["8/* We use these to control various global styles */;;;	[ ;iÃo;;"!default;@;"body-bg;o:Sass::Script::Color	;@:@attrs{	:rediÿ:
alphai:
greeniÿ:	blueiÿ;0;iÄ;	[ ;iÄo;;"!default;@;"body-font-color;o;H	;@;I{	;Ji';Ki;Li';Mi';0;iÅ;	[ ;iÅo;;"!default;@;"body-font-family;o;	;@;[
o;	;@;"Helvetica Neue;:string;iÆo;	;@;"Helvetica;;N;iÆo;	;@;"Helvetica;; ;iÆo;	;@;"
Arial;; ;iÆo;	;@;"sans-serif;; ;iÆ;!;7;iÆ;	[ ;iÆo;;"!default;@;"body-font-weight;o;	;@;"normal;; ;iÇ;	[ ;iÇo;;"!default;@;"body-font-style;o;	;@;"normal;; ;iÈ;	[ ;iÈo;

;@;["0/* We use this to control font-smoothing */;;;	[ ;iÊo;;"!default;@;"font-smoothing;o;	;@;"subpixel-antialiased;; ;iË;	[ ;iËo;

;@;[":/* We use these to control text direction settings */;;;	[ ;iÍo;;"!default;@;"text-direction;o;	;@;"ltr;; ;iÎ;	[ ;iÎo;

;@;["h/* NOTE: No need to change this conditional statement, $text-direction variable controls it all. */;;;	[ ;iÐo;;"!default;@;"default-float;o;	;@;"	left;; ;iÑ;	[ ;iÑo;;"!default;@;"opposite-direction;o;	;@;"
right;; ;iÒ;	[ ;iÒu;¼[o:Sass::Script::Operation
:@operator:eq:@options{ :@operand2o:Sass::Script::String	;@:@value"ltr:
@type:identifier:
@lineiÓ:@operand1o:Sass::Script::Variable	;@:
@name"text-direction:@underscored_name"text_direction;iÓ;iÓu:Sass::Tree::IfNode÷[00[o:Sass::Tree::VariableNode:@guarded0:@options{ :
@name"default-float:
@expro:Sass::Script::String	;@:@value"
right:
@type:identifier:
@linei×:@children[ ;i×o; ;0;@;"opposite-direction;	o;
	;@;"	left;;;iØ;[ ;iØ[o:Sass::Tree::VariableNode:@guarded0;@;"default-float:
@expro;
	;@;"	left;;;iÔ:@children[ ;iÔo;;0;@;"opposite-direction;o;
	;@;"
right;;;iÕ;[ ;iÕo;

;@;["4/* We use these as default colors throughout */;;;	[ ;iÛo;;"!default;@;"primary-color;o;H	;@;I{	;Ji0;Ki;Li¦;MiË;0;iÜ;	[ ;iÜo;;"!default;@;"secondary-color;o;H	;@;I{	;Jié;Ki;Lié;Mié;0;iÝ;	[ ;iÝo;;"!default;@;"alert-color;o;H	;@;I{	;JiÆ;Ki;Li;Mi;0;iÞ;	[ ;iÞo;;"!default;@;"success-color;o;H	;@;I{	;Jib;Ki;Li¤;Mi(;0;iß;	[ ;ißo;

;@;["W/* We use these to make sure border radius matches unless we want it different. */;;;	[ ;iáo;;"!default;@;"global-radius;o;#;$[ ;@;%["px;&"3px;i;iâ;	[ ;iâo;;"!default;@;"global-rounded;o;#;$[ ;@;%["px;&"1000px;iè;iã;	[ ;ião;

;@;["L/* We use these to control inset shadow shiny edges and depressions. */;;;	[ ;iåo;;"!default;@;"shiny-edge-size;o;	;@;[o;#;$@D;@;%[ ;&"0;i ;iæo;#;$[ ;@;%["px;&"1px;i;iæo;#;$@D;@;%[ ;&"0;i ;iæ;!;";iæ;	[ ;iæo;;"!default;@;"shiny-edge-color;o;8;9{ ;@;"	rgba;0;[o;H	;@;I{	;Jiÿ;Ki;Liÿ;Miÿ;0;iço;#;$@D;@;%[ ;&"0.5;f0.5;iç;iç;	[ ;iço;;"!default;@;"shiny-edge-active-color;o;8;9{ ;@;"	rgba;0;[o;H	;@;I{	;Ji ;Ki;Li ;Mi ;0;ièo;#;$@D;@;%[ ;&"0.2;f0.20000000000000001 ;iè;iè;	[ ;ièo;

;@;["[/* We use this to control whether or not CSS classes come through in the gem files. */;;;	[ ;iêo;;"!default;@;"include-html-classes;o;;@;T;ië;	[ ;iëo;;"!default;@;"include-print-styles;o;;@;T;iì;	[ ;iìo;;"!default;@;" include-html-global-classes;o;	;@;"include-html-classes;"include_html_classes;ií;	[ ;iío;

;@;["/* Media Queries */;;;	[ ;iïo;;"!default;@;"small-screen;o;#;$[ ;@;%["px;&"
768px;i ;ið;	[ ;iðo;;"!default;@;"medium-screen;o;#;$[ ;@;%["px;&"1280px;i ;iñ;	[ ;iño;;"!default;@;"large-screen;o;#;$[ ;@;%["px;&"1440px;i ;iò;	[ ;iòo;;"!default;@;"screen;o;	;@;"only screen;;N;iô;	[ ;iôo;;"!default;@;"
small;o:&Sass::Script::StringInterpolation
;@:@aftero;	;@;");;N;iõ:	@mido;	;@;"small-screen;"small_screen;iõ;iõ:@beforeo;	;@;"!only screen and (min-width: ;;N;iõ;	[ ;iõo;;"!default;@;"medium;o;O
;@;Po;	;@;");;N;iö;Qo;	;@;"medium-screen;"medium_screen;iö;iö;Ro;	;@;" only screen and (min-width:;;N;iö;	[ ;iöo;;"!default;@;"
large;o;O
;@;Po;	;@;");;N;i÷;Qo;	;@;"large-screen;"large_screen;i÷;i÷;Ro;	;@;" only screen and (min-width:;;N;i÷;	[ ;i÷o;;"!default;@;"landscape;o;	;@;"-only screen and (orientation: landscape);;N;iø;	[ ;iøo;;"!default;@;"portrait;o;	;@;",only screen and (orientation: portrait);;N;iù;	[ ;iùo;

;@;["w/*We use this as cursors values for enabling the option of having custom cursors in the whole site's stylesheet */;;;	[ ;iûo;;"!default;@;"cursor-crosshair-value;o;	;@;"crosshair;; ;iü;	[ ;iüo;;"!default;@;"cursor-default-value;o;	;@;"default;; ;iý;	[ ;iýo;;"!default;@;"cursor-pointer-value;o;	;@;"pointer;; ;iþ;	[ ;iþo;;"!default;@;"cursor-help-value;o;	;@;"	help;; ;iÿ;	[ ;iÿo;;"!default;@;"cursor-text-value;o;	;@;"	text;; ;i ;	[ ;i u;[o:Sass::Script::Variable	:@options{ :
@name" include-html-global-classes:@underscored_name" include_html_global_classes:
@linei0[#o:Sass::Tree::CommentNode
;@:@value["F/* Set box-sizing globally to handle padding and border widths */:
@type:silent:@children[ ;	io:Sass::Tree::RuleNode:
@tabsi ;@:
@rule["*,
  *:before,
  *:after:@parsed_ruleso:"Sass::Selector::CommaSequence:@members[o:Sass::Selector::Sequence;[o:#Sass::Selector::SimpleSequence
;[o:Sass::Selector::Universal:@namespace0:@filename" ;	i:@subject0;@:@sourceso:Set:
@hash{ ;	io;;["
o;
;[o;;0;@;	io:Sass::Selector::Pseudo
;["before;@;:
class;	i:	@arg0;0;@;o;;{ ;	io;;["
o;
;[o;;0;@;	io;
;["
after;@;;;	i; 0;0;@;o;;{ ;	i;@;	i:@has_childrenT;[o:Sass::Tree::MixinNode:@keywords{ ;@;"box-sizing:@splat0;[ :
@args[o:Sass::Script::String	;@;"border-box;:identifier;	i	;	i	;	io;;i ;@;["html,
  body;o;;[o;;[o;
;[o:Sass::Selector::Element	;["	html;0;" ;	i;0;@F;o;;{ ;	io;;["
o;
;[o;(	;["	body;0;@F;	i;0;@F;o;;{ ;	i;@F;	i;!T;[o:Sass::Tree::PropNode;i ;@;["font-size:@prop_syntax:new;o; 	;@;"base-font-size;"base_font_size;	i;[ ;	i;	io;

;@;["/* Default body styles */;;;[ ;	io;;i ;@;["	body;o;;[o;;[o;
;[o;(	;["	body;0;" ;	i;0;@k;o;;{ ;	i;@k;	i;!T;[o;);i ;@;["background;*;+;o; 	;@;"body-bg;"body_bg;	i;[ ;	io;);i ;@;["
color;*;+;o; 	;@;"body-font-color;"body_font_color;	i;[ ;	io;);i ;@;["padding;*;+;o;&;@;"0;;';[ ;	io;);i ;@;["margin;*;+;o;&;@;"0;;';[ ;	io;);i ;@;["font-family;*;+;o; 	;@;"body-font-family;"body_font_family;	i;[ ;	io;);i ;@;["font-weight;*;+;o; 	;@;"body-font-weight;"body_font_weight;	i;[ ;	io;);i ;@;["font-style;*;+;o; 	;@;"body-font-style;"body_font_style;	i;[ ;	io;);i ;@;["line-height;*;+;o;&;@;"1;;';[ ;	io;

;@;["F/* Set to $base-line-height to take on browser default of 150% */;;;[ ;	io;);i ;@;["position;*;+;o;&;@;"relative;;';[ ;	io;);i ;@;["cursor;*;+;o; 	;@;"cursor-default-value;"cursor_default_value;	i;[ ;	i;	io;;i ;@;["a:hover;o;;[o;;[o;
;[o;(	;["a;0;" ;	io;
;["
hover;@¼;;;	i; 0;0;@¼;o;;{ ;	i;@¼;	i;!T;[o;);i ;@;["cursor;*;+;o; 	;@;"cursor-pointer-value;"cursor_pointer_value;	i;[ ;	i;	io;

;@;["</* Override outline from normalize, we don't like it */;;;[ ;	io;;i ;@;["a:focus;o;;[o;;[o;
;[o;(	;["a;0;" ;	i o;
;["
focus;@Ú;;;	i ; 0;0;@Ú;o;;{ ;	i ;@Ú;	i ;!T;[o;);i ;@;["outline;*;+;o;&;@;"	none;;';[ ;	i ;	i o;

;@;["B/* Grid Defaults to get images and embeds to work properly */;;;[ ;	i"o;;i ;@;["img,
  object,
  embed;o;;[o;;[o;
;[o;(	;["img;0;" ;	i%;0;@÷;o;;{ ;	i%o;;["
o;
;[o;(	;["object;0;@÷;	i%;0;@÷;o;;{ ;	i%o;;["
o;
;[o;(	;["
embed;0;@÷;	i%;0;@÷;o;;{ ;	i%;@÷;	i%;!T;[o;);i ;@;["max-width;*;+;o;&;@;"	100%;;';[ ;	i%o;);i ;@;["height;*;+;o;&;@;"	auto;;';[ ;	i%;	i%o;;i ;@;["object,
  embed;o;;[o;;[o;
;[o;(	;["object;0;" ;	i(;0;@';o;;{ ;	i(o;;["
o;
;[o;(	;["
embed;0;@';	i(;0;@';o;;{ ;	i(;@';	i(;!T;[o;);i ;@;["height;*;+;o;&;@;"	100%;;';[ ;	i(;	i(o;;i ;@;["img;o;;[o;;[o;
;[o;(	;["img;0;" ;	i);0;@G;o;;{ ;	i);@G;	i);!T;[o;);i ;@;["-ms-interpolation-mode;*;+;o;&;@;"bicubic;;';[ ;	i);	i)o;;i ;@;["#map_canvas,
  .map_canvas;o;;[o;;[o;
;[o:Sass::Selector::Id;["map_canvas;" ;	i,;0;@];o;;{ ;	i,o;;["
o;
;[o:Sass::Selector::Class;["map_canvas;@];	i,;0;@];o;;{ ;	i,;@];	i,;!T;[o;;i ;@;["img,
    embed,
    object;o;;[o;;[o;
;[o;(	;["img;0;" ;	i/;0;@w;o;;{ ;	i/o;;["
o;
;[o;(	;["
embed;0;@w;	i/;0;@w;o;;{ ;	i/o;;["
o;
;[o;(	;["object;0;@w;	i/;0;@w;o;;{ ;	i/;@w;	i/;!T;[o;);i ;@;["max-width;*;+;o;&;@;"none !important;;';[ ;	i/;	i/;	i,o;

;@;[",/* Miscellaneous useful HTML classes */;;;[ ;	i3o;;i ;@;["
.left;o;;[o;;[o;
;[o;-;["	left;" ;	i4;0;@¥;o;;{ ;	i4;@¥;	i4;!T;[o;);i ;@;["
float;*;+;o;&;@;"left !important;;';[ ;	i4;	i4o;;i ;@;[".right;o;;[o;;[o;
;[o;-;["
right;" ;	i5;0;@»;o;;{ ;	i5;@»;	i5;!T;[o;);i ;@;["
float;*;+;o;&;@;"right !important;;';[ ;	i5;	i5o;;i ;@;[".text-left;o;;[o;;[o;
;[o;-;["text-left;" ;	i6;0;@Ñ;o;;{ ;	i6;@Ñ;	i6;!T;[o;);i ;@;["text-align;*;+;o;&;@;"left !important;;';[ ;	i6;	i6o;;i ;@;[".text-right;o;;[o;;[o;
;[o;-;["text-right;" ;	i7;0;@ç;o;;{ ;	i7;@ç;	i7;!T;[o;);i ;@;["text-align;*;+;o;&;@;"right !important;;';[ ;	i7;	i7o;;i ;@;[".text-center;o;;[o;;[o;
;[o;-;["text-center;" ;	i8;0;@ý;o;;{ ;	i8;@ý;	i8;!T;[o;);i ;@;["text-align;*;+;o;&;@;"center !important;;';[ ;	i8;	i8o;;i ;@;[".text-justify;o;;[o;;[o;
;[o;-;["text-justify;" ;	i9;0;@;o;;{ ;	i9;@;	i9;!T;[o;);i ;@;["text-align;*;+;o;&;@;"justify !important;;';[ ;	i9;	i9o;;i ;@;["
.hide;o;;[o;;[o;
;[o;-;["	hide;" ;	i:;0;@);o;;{ ;	i:;@);	i:;!T;[o;);i ;@;["display;*;+;o;&;@;"	none;;';[ ;	i:;	i:o;

;@;["â/* Font smoothing
 * Antialiased font smoothing works best for light text on a dark background.
 * Apply to single elements instead of globally to body.
 * Note this only applies to webkit-based desktop browsers on the Mac. */;;;[ ;	i<o;;i ;@;[".antialiased;o;;[o;;[o;
;[o;-;["antialiased;" ;	i@;0;@C;o;;{ ;	i@;@C;	i@;!T;[o;);i ;@;["-webkit-font-smoothing;*;+;o;&;@;"antialiased;;';[ ;	i@;	i@o;

;@;["W/* Get rid of gap under images by making them display: inline-block; by default */;;;[ ;	iBo;;i ;@;["img;o;;[o;;[o;
;[o;(	;["img;0;" ;	iC;0;@];o;;{ ;	iC;@];	iC;!T;[o;);i ;@;["display;*;+;o;&;@;"inline-block;;';[ ;	iDo;);i ;@;["vertical-align;*;+;o;&;@;"middle;;';[ ;	iE;	iCo;

;@;["(/*
 * Global resets for forms
 * */;;;[ ;	iHo;

;@;[";/* Make sure textarea takes on height automatically */;;;[ ;	iLo;;i ;@;["textarea;o;;[o;;[o;
;[o;(	;["textarea;0;" ;	iM;0;@;o;;{ ;	iM;@;	iM;!T;[o;);i ;@;["height;*;+;o;&;@;"	auto;;';[ ;	iMo;);i ;@;["min-height;*;+;o;&;@;"	50px;;';[ ;	iM;	iMo;

;@;["5/* Make select elements 100% width by default */;;;[ ;	iOo;;i ;@;["select;o;;[o;;[o;
;[o;(	;["select;0;" ;	iP;0;@¡;o;;{ ;	iP;@¡;	iP;!T;[o;);i ;@;["
width;*;+;o;&;@;"	100%;;';[ ;	iP;	iP;i